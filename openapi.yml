openapi: "3.0.0"
info:
  title: "Leivalle API"
  description: "Use this API"
  version: "0.1"
  contact:
    name: "Leivalle API"
    url: "https://www.leivalle.org"
    email: "anton.rautio@gmail.com"
servers:
  - url: "https://api.leivalle.org"
    description: "Production API"
paths:
  /fine:
    post:
      tags:
      - New fine
      summary: "Create new fines."
      description: "Create new fines to the database."
      operationId: CreateFines
      requestBody:
        description: Fine body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlainFine'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Fine created
                type: object
                $ref: '#/components/schemas/Fine'
        404:
          $ref: '#/components/responses/NotFound'
  /fine/{fineId}:
    get:
      tags:
      - Read Fine
      summary: "Read fines."
      description: "Read fines from the database."
      operationId: ReadFines
      parameters:
      - name: fineId
        in: path
        description: "**Fine id** *Example: 1*"
        required: true
        schema:
          type: string
          minimum: 1
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Fine found
                type: object
                $ref: '#/components/schemas/Fine'
        404: 
          $ref: '#/components/responses/NotFound'
    put:
      tags:
      - Update fines
      summary: "Update fines."
      description: "Update fines in the database."
      operationId: UpdateFines
      parameters:
      - name: fineId
        in: path
        description: "**Fine id** *Example: 1*"
        required: true
        schema:
          type: string
          minimum: 1
      requestBody:
        description: Fine body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlainFine'
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Fine updated
                type: object
                $ref: '#/components/schemas/Fine'
        404:
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
      - Delete fines
      summary: "Delete fines."
      description: "Delete fines from the database."
      operationId: DeleteFines
      parameters:
      - name: fineId
        in: path
        description: "**Fine id** *Example: 1*"
        required: true
        schema:
          type: string
          minimum: 1
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                title: Fine deleted
                type: object
                $ref: '#/components/schemas/Fine'
        404:
          $ref: '#/components/responses/NotFound'
  /fines:
    get:
      tags:
      - Get all fines
      summary: "Get all fines"
      operationId: GetFines
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fine'
        404:
          $ref: '#/components/responses/NotFound'
  /test:
    get:
      tags:
      - For testing purposes
      summary: "For testing purposes"
      operationId: TestOne
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    PlainFine:
      type: object
      properties:
        receiverName:
          type: string
        amount:
          type: integer
        description:
          type: string
      required:
        - receiverName
        - amount
        - description
    Fine:
      allOf:
        - $ref: '#/components/schemas/PlainFine'
        - type: object
          properties:
            _id:
              type: string
          required:
            - _id
    Error:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
      required:
        - status
        - message
  responses:
    NotFound:
      description: The specified fine was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
